# This workflow runs:
# - Vulnerability scan on latest Go using govulncheck command.
#
# This workflow caches images built with Docker and docker-compose to speed up its execution.
name: Vulnerability

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PATH_CACHE: /tmp/docker-img-arch

jobs:
  go:
    name: Run vulnerability scan on Go via container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create image tag from file hash
        uses: KEINOS/gh-action-hash-for-cache@main
        id: imagetag
        # Udate the hash if any of the below file is changed or the month has changed.
        with:
          path: |
            ./go.mod
            ./.github/Dockerfile
            ./.github/docker-compose.yml
            ./.github/workflows/vulnerability.yml
          variant: $(TZ=UTC-9 date '+%Y%m')

      - name: Enable Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PATH_CACHE }}
          key: ${{ steps.imagetag.outputs.hash }}

      - name: Load cached Docker images if any
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          docker load --input ${{ env.PATH_CACHE }}/${{ steps.imagetag.outputs.hash }}/github_vuln_1.tar

      - name: Pull base image ahead for stability
        if: steps.cache.outputs.cache-hit != 'true'
        run: docker pull golang:alpine

      - name: Build Docker images if no-cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: docker compose --file ./.github/docker-compose.yml build vuln

      - name: Run vulnerability scan
        run: docker compose --file ./.github/docker-compose.yml run vuln

      - name: Save/export built images to cache dir if no-cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ env.PATH_CACHE }}/${{ steps.imagetag.outputs.hash }}
          docker save --output ${{ env.PATH_CACHE }}/${{ steps.imagetag.outputs.hash }}/github_vuln_1.tar github_vuln:latest
